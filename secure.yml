- hosts: all

  tasks:
    - name: set pass max days 90
      lineinfile:
        dest: /etc/login.defs
        regexp: '^PASS_MAX_DAYS'
        state: present
        line: "PASS_MAX_DAYS  90"
    - name: more pass security el7
      lineinfile:
        dest: /etc/pam.d/system-auth
        regexp: "{{ item.regexp }}"
        state: present
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^password.*requisite.*retry.*', line: 'password    requisite     pam_pwquality.so min=disabled,disabled,12,8,7 local_users_only retry=3' }
        - { regexp: '^password.*sufficient.*shadow*', line: 'password    sufficient    pam_unix.so use_authtok md5 shadow remember=15' }
      when: ansible_distribution_major_version == "7"
    - name: more pass security el5/6
      lineinfile:
        dest: /etc/pam.d/system-auth
        regexp: "{{ item.regexp }}"
        state: present
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^password.*requisite.*retry.*', line: 'password    requisite     pam_passwdqc.so min=disabled,disabled,12,8,7 retry=3' }
        - { regexp: '^password.*sufficient.*shadow*', line: 'password    sufficient    pam_unix.so use_authtok md5 shadow remember=15' }
      when: ansible_distribution_major_version != "7"
    - name: alert notice
    # Destination of issue and motd in local server is /srv/file/security/
      copy: src="/srv/file/security/{{ item.name }}" dest="{{ item.dest }}" owner=root group=root mode=0644
      with_items:
        - { name: 'motd', dest: '/etc/motd' }
        - { name: 'issue', dest: '/etc/issue' }
    - name: sshd settings
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^#?PermitRootLogin.*', line: 'PermitRootLogin without-password' }
        - { regexp: '^#?Banner.*', line: 'Banner /etc/issue' }
      notify:
        - restart sshd
    - name: create directory if it doesn't exist
    ## Create a new folder for system scripts
      file: path=/home/system/scripts state=directory mode=0755
    - name: rk files
    ## Put new files from local /srv/file/security/ to Destination server and then install rootkit hunter
      copy: src="/srv/file/security/{{ item.name }}" dest="{{ item.dest }}" mode="{{ item.mode }}"
      with_items:
        - { name: 'rkhunter-1.4.6.tar.gz', dest: '/tmp/rkhunter-1.4.6.tar.gz', mode: '0644' }
        - { name: 'rkscript', dest: '/home/system/scripts/rkscript', mode: '0755' }
      notify:
        - install rk
  handlers:
    - name: restart sshd
      service:
       name: sshd
       state: restarted
    - name: install rk
      shell: cd /tmp && tar -xvf rkhunter-1.4.6.tar.gz && cd rkhunter-1.4.6 && ./installer.sh --layout default --install
